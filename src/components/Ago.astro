---
const { date } = Astro.props
const formatter = new Intl.RelativeTimeFormat('ar', { numeric: 'always' });
// function to compare date against today and classify whether to format in hours, days, weeks, months, or years
const format = (date) => {
    const today = new Date();
    const givenDate = new Date(date);
    const diff = Math.abs(today.getTime() - givenDate.getTime());

    // Calculate the relative time difference in different units
    const seconds = Math.floor(diff / 1000);
    const minutes = Math.floor(seconds / 60);
    const hours = Math.floor(minutes / 60);
    const days = Math.floor(hours / 24);
    const weeks = Math.floor(days / 7);
    const months = Math.floor(days / 30);
    const years = Math.floor(days / 365);

    let formattedTime;

    if (seconds < 60) {
        formattedTime = formatter.format(-seconds, 'second');
    } else if (minutes < 60) {
        formattedTime = formatter.format(-minutes, 'minute');
    } else if (hours < 24) {
        formattedTime = formatter.format(-hours, 'hour');
    } else if (days < 7) {
        formattedTime = formatter.format(-days, 'day');
    } else if (weeks < 4) {
        formattedTime = formatter.format(-weeks, 'week');
    } else if (months < 12) {
        formattedTime = formatter.format(-months, 'month');
    } else {
        formattedTime = formatter.format(-years, 'year');
    }

    console.log("last update", formattedTime);
    return formattedTime;
    
};

---
<time class="underline decoration-dashed" title={date} datetime={date}>{ format(date) }</time>